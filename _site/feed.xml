<?xml version="1.0" encoding="UTF-8"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Youth-18 Blog</title>
    <description>从小白到大白</description>
    <link>/</link>
    <atom:link href="/feed.xml" rel="self" type="application/rss+xml" />
    <pubDate>Wed, 15 Aug 2018 22:28:29 +0800</pubDate>
    <lastBuildDate>Wed, 15 Aug 2018 22:28:29 +0800</lastBuildDate>
    <generator>Jekyll v3.8.3</generator>
    
      <item>
        <title>YOLOv3使用文档 </title>
        <description>&lt;h3 id=&quot;一yolov3的配置&quot;&gt;一、YOLOv3的配置&lt;/h3&gt;
&lt;p&gt;参考：https://pjreddie.com/darknet/yolo/&lt;/p&gt;
&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;git clone https://github.com/pjreddie/darknet
cd darknet
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;
&lt;p&gt;修改Makefile文件：&lt;/p&gt;
&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;GPU=1  #使用GPU
CUDNN=1  #使用CUDNN加速  
OPENCV=1 #使用opencv
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;
&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;make -j8
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;
&lt;p&gt;可测试一下&lt;/p&gt;
&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;wget https://pjreddie.com/media/files/yolov3.weights
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;
&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;./darknet detect cfg/yolov3.cfg yolov3.weights data/dog.jpg
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h3 id=&quot;二数据集的准备&quot;&gt;二、数据集的准备&lt;/h3&gt;
&lt;p&gt;参考：https://blog.csdn.net/lilai619/article/details/79695109&lt;br /&gt;
https://blog.csdn.net/john_bh/article/details/80625220&lt;/p&gt;
&lt;h4 id=&quot;1将自己的数据集转化为voc格式&quot;&gt;1.将自己的数据集转化为voc格式&lt;/h4&gt;
&lt;p&gt;这个数据集的可放在任意位置，我是在根目录下建了一个data文件夹用来放置数据。&lt;/p&gt;
&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;data
—— VOCdevkit
———— headdata
—————— Annotations
—————— ImageSets
———————— Main
—————— JPEGImages
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;
&lt;p&gt;名字可以更改，但后面的路径要写对。&lt;br /&gt;
Annotations里面是.xml文件；&lt;br /&gt;
Main中是4个txt文件，其中test.txt是测试集，train.txt是训练集，val.txt是验证集，trainval.txt是训练和验证集;&lt;br /&gt;
JPEGImages中是所有的训练图片。&lt;/p&gt;
&lt;h4 id=&quot;2生成yolov3使用的数据格式&quot;&gt;2.生成YOLOv3使用的数据格式&lt;/h4&gt;
&lt;p&gt;YOLOv3使用的是.txt数据格式，.txt里面如下图：
&lt;img src=&quot;/blog_image/YOLOv3_txt.png&quot; alt=&quot;&quot; /&gt;&lt;br /&gt;
将darknet/scripts/voc_label.py复制到data目录下，跟VOCdevkit同目录。
修改里面的内容，参考我的&lt;a href=&quot;https://github.com/Youth-18/tools/tree/master/YOLOv3&quot;&gt;voc_label.py&lt;/a&gt;：&lt;/p&gt;
&lt;div class=&quot;language-python highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;kn&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;xml.etree.ElementTree&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;as&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;ET&lt;/span&gt;
&lt;span class=&quot;kn&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;pickle&lt;/span&gt;
&lt;span class=&quot;kn&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;os&lt;/span&gt;
&lt;span class=&quot;kn&quot;&gt;from&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;os&lt;/span&gt; &lt;span class=&quot;kn&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;listdir&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;getcwd&lt;/span&gt;
&lt;span class=&quot;kn&quot;&gt;from&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;os.path&lt;/span&gt; &lt;span class=&quot;kn&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;join&lt;/span&gt;

&lt;span class=&quot;n&quot;&gt;sets&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;'train'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;),&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;'val'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;),&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;'test'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)]&lt;/span&gt;              &lt;span class=&quot;c&quot;&gt;#当你的Main下文件不需要year时，请去掉全文中所有year   &lt;/span&gt;

&lt;span class=&quot;n&quot;&gt;classes&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;person&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt;                              &lt;span class=&quot;c&quot;&gt;#修改为自己的类别&lt;/span&gt;


&lt;span class=&quot;k&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;convert&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;size&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;box&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;):&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;dw&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;mf&quot;&gt;1.&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;/&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;size&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;])&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;dh&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;mf&quot;&gt;1.&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;/&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;size&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;])&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;x&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;box&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;box&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;])&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;/&lt;/span&gt;&lt;span class=&quot;mf&quot;&gt;2.0&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;y&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;box&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;2&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;box&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;3&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;])&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;/&lt;/span&gt;&lt;span class=&quot;mf&quot;&gt;2.0&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;w&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;box&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;box&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;h&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;box&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;3&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;box&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;2&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;x&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;x&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;*&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;dw&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;w&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;w&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;*&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;dw&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;y&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;y&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;*&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;dh&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;h&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;h&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;*&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;dh&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;x&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;y&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;w&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;h&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;

&lt;span class=&quot;k&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;convert_annotation&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;image_id&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;):&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;in_file&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;open&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;'VOCdevkit/headdata/Annotations/&lt;/span&gt;&lt;span class=&quot;si&quot;&gt;%&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;s.xml'&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;%&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;image_id&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;))&lt;/span&gt;                            &lt;span class=&quot;c&quot;&gt;# 修改为自己.xml文件路径&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;out_file&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;open&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;'VOCdevkit/headdata/labels/&lt;/span&gt;&lt;span class=&quot;si&quot;&gt;%&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;s.txt'&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;%&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;image_id&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;),&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;'w'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;                           &lt;span class=&quot;c&quot;&gt;# 修改label存放路径&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;tree&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;ET&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;parse&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;in_file&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;root&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;tree&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;getroot&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;size&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;root&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;find&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;'size'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;w&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;int&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;size&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;find&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;'width'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;text&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;h&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;int&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;size&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;find&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;'height'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;text&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;

    &lt;span class=&quot;k&quot;&gt;for&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;obj&lt;/span&gt; &lt;span class=&quot;ow&quot;&gt;in&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;root&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;iter&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;'object'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;):&lt;/span&gt;
        &lt;span class=&quot;n&quot;&gt;difficult&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;obj&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;find&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;'difficult'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;text&lt;/span&gt;
        &lt;span class=&quot;n&quot;&gt;cls&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;obj&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;find&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;'name'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;text&lt;/span&gt;
        &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;cls&lt;/span&gt; &lt;span class=&quot;ow&quot;&gt;not&lt;/span&gt; &lt;span class=&quot;ow&quot;&gt;in&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;classes&lt;/span&gt; &lt;span class=&quot;ow&quot;&gt;or&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;int&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;difficult&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;==&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;
            &lt;span class=&quot;k&quot;&gt;continue&lt;/span&gt;
        &lt;span class=&quot;n&quot;&gt;cls_id&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;classes&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;index&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;cls&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
        &lt;span class=&quot;n&quot;&gt;xmlbox&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;obj&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;find&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;'bndbox'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
        &lt;span class=&quot;n&quot;&gt;b&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;float&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;xmlbox&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;find&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;'xmin'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;text&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;),&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;float&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;xmlbox&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;find&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;'xmax'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;text&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;),&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;float&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;xmlbox&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;find&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;'ymin'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;text&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;),&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;float&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;xmlbox&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;find&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;'ymax'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;text&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;))&lt;/span&gt;
        &lt;span class=&quot;n&quot;&gt;bb&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;convert&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;((&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;w&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;h&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;),&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;b&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
        &lt;span class=&quot;n&quot;&gt;out_file&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;write&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;str&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;cls_id&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&quot; &quot;&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&quot; &quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;join&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;([&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;str&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;a&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;for&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;a&lt;/span&gt; &lt;span class=&quot;ow&quot;&gt;in&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;bb&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;])&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;'&lt;/span&gt;&lt;span class=&quot;se&quot;&gt;\n&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;

&lt;span class=&quot;n&quot;&gt;wd&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;getcwd&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt;

&lt;span class=&quot;k&quot;&gt;for&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;image_set&lt;/span&gt; &lt;span class=&quot;ow&quot;&gt;in&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;sets&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;ow&quot;&gt;not&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;os&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;path&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;exists&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;'VOCdevkit/headdata/labels/'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;):&lt;/span&gt;                                                   &lt;span class=&quot;c&quot;&gt;# 修改路径&lt;/span&gt;
        &lt;span class=&quot;n&quot;&gt;os&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;makedirs&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;'VOCdevkit/headdata/labels/'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;image_ids&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;open&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;'VOCdevkit/headdata/ImageSets/Main/&lt;/span&gt;&lt;span class=&quot;si&quot;&gt;%&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;s.txt'&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;%&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;image_set&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;))&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;read&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;strip&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;split&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt;        &lt;span class=&quot;c&quot;&gt;# 修改路径&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;list_file&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;open&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;'&lt;/span&gt;&lt;span class=&quot;si&quot;&gt;%&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;s.txt'&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;%&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;image_set&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;),&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;'w'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;for&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;image_id&lt;/span&gt; &lt;span class=&quot;ow&quot;&gt;in&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;image_ids&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;
        &lt;span class=&quot;k&quot;&gt;print&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;image_id&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
        &lt;span class=&quot;n&quot;&gt;list_file&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;write&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;'&lt;/span&gt;&lt;span class=&quot;si&quot;&gt;%&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;s/VOCdevkit/headdata/JPEGImages/&lt;/span&gt;&lt;span class=&quot;si&quot;&gt;%&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;s.jpg&lt;/span&gt;&lt;span class=&quot;se&quot;&gt;\n&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;'&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;%&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;wd&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;image_id&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;))&lt;/span&gt;                        &lt;span class=&quot;c&quot;&gt;#修改路径&lt;/span&gt;
        &lt;span class=&quot;n&quot;&gt;convert_annotation&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;image_id&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;list_file&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;close&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt;

&lt;span class=&quot;n&quot;&gt;os&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;system&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;cat train.txt val.txt &amp;gt; train1.txt&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;                                                            &lt;span class=&quot;c&quot;&gt;# 将文件合并为一个文件，最好文件名都不相同，生成后再把train1.txt改回train.txt&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;os&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;system&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;cat train.txt val.txt test.txt &amp;gt; train.all.txt&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
                                                                                                           &lt;span class=&quot;c&quot;&gt;#   &lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;
&lt;p&gt;生成YOLOv3训练所用数据&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;python voc_label.py 
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;
&lt;h3 id=&quot;三训练&quot;&gt;三、训练&lt;/h3&gt;
&lt;h4 id=&quot;0修改detectorc&quot;&gt;0.修改detector.c&lt;/h4&gt;
&lt;p&gt;目的1：便于以后计算recall&lt;br /&gt;
目的2：训练之前计算自己数据的anchor大小，从而更改cfg文件&lt;/p&gt;
&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;./darknet detector calc_anchors cfg/voc.data -num_of_clusters 9 -width 416 -height 416 -show 1  
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;
&lt;p&gt;来聚类anchor,然后修改cfg/yolov3-train.cfg中的anchor，修改格式可参考我的&lt;a href=&quot;https://github.com/Youth-18/tools/tree/master/YOLOv3&quot;&gt;detector.c&lt;/a&gt;&lt;/p&gt;
&lt;h4 id=&quot;1下载预训练模型&quot;&gt;1.下载预训练模型&lt;/h4&gt;
&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;wget https://pjreddie.com/media/files/darknet53.conv.74
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;
&lt;h4 id=&quot;2修改配置文件&quot;&gt;2.修改配置文件&lt;/h4&gt;
&lt;p&gt;（1）修改cfg/voc.data&lt;/p&gt;
&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;classes= 1                                              # 类别数，我的只有一类
train  = /home/data/datahead/train.txt       #生成的YOLOv3使用的train.txt
valid  = /home/data/datahead/test.txt        #生成的test.txt
names = /home/data/datahead/headdata.names   #自己建的.name，里面是具体类别
backup = /home/darknet/backup                #存储权重的文件夹

&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;
&lt;p&gt;（2）修改.names文件&lt;br /&gt;
没有这个文件可以自己新建一个，一行放一个类别名&lt;br /&gt;
（3）修改cfg/yolov3-voc.cfg
&amp;lt;font color=red&amp;gt;这里可以将yolov3-voc.cfg备份成两个文件，yolov3-train.cfg与yolov3-test.cfg,然后训练文件中只开启train,测试文件中只开启test，且将batch=1，subdivisions=1&amp;lt;/font&amp;gt;&lt;/p&gt;
&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;[net]
# Testing            ### 测试模式                                          
# batch=1
# subdivisions=1
# Training           ### 训练模式，每次前向的图片数目 = batch/subdivisions 
batch=64
subdivisions=16
width=416            ### 网络的输入宽、高、通道数
height=416
channels=3
momentum=0.9         ### 动量 
decay=0.0005         ### 权重衰减
angle=0
saturation = 1.5     ### 饱和度
exposure = 1.5       ### 曝光度 
hue=.1               ### 色调
learning_rate=0.001  ### 学习率 
burn_in=1000         ### 学习率控制的参数
max_batches = 50200  ### 迭代次数
policy=steps         ### 学习率策略 
steps=40000,45000    ### 学习率变动步长 
scales=.1,.1         ### 学习率变动因子



[convolutional]
batch_normalize=1    ### BN
filters=32           ### 卷积核数目
size=3               ### 卷积核尺寸
stride=1             ### 卷积核步长
pad=1                ### pad
activation=leaky     ### 激活函数

......

[convolutional]
size=1
stride=1
pad=1
filters=45  #3*(10+4+1)
activation=linear

[yolo]
mask = 6,7,8
anchors = 10,13,  16,30,  33,23,  30,61,  62,45,  59,119,  116,90,  156,198,  373,326
classes=10  #类别   
num=9
jitter=.3
ignore_thresh = .5
truth_thresh = 1
random=0  #1，如果显存很小，将random设置为0，关闭多尺度训练；
......

[convolutional]
size=1
stride=1
pad=1
filters=45  #3*(10+4+1)
activation=linear

[yolo]
mask = 3,4,5
anchors = 10,13,  16,30,  33,23,  30,61,  62,45,  59,119,  116,90,  156,198,  373,326
classes=10  #类别
num=9
jitter=.3
ignore_thresh = .5
truth_thresh = 1
random=0  #1，如果显存很小，将random设置为0，关闭多尺度训练；
......

[convolutional]
size=1
stride=1
pad=1
filters=45  #3*(10+4+1)
activation=linear

[yolo]
mask = 0,1,2
anchors = 10,13,  16,30,  33,23,  30,61,  62,45,  59,119,  116,90,  156,198,  373,326
classes=10  #类别
num=9
jitter=.3  # 数据扩充的抖动操作
ignore_thresh = .5  #文章中的阈值1
truth_thresh = 1  #文章中的阈值2
random=0  #1，如果显存很小，将random设置为0，关闭多尺度训练；
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;
&lt;p&gt;必须要改的地方，classes的数目为你的类别数。然后根据你classes类别的数目修改最后一层卷积数，即[yolo]前面的一层卷积中filters。计算公式如下：
&lt;script type=&quot;math/tex&quot;&gt;N*N*[3*(4+1+C)]&lt;/script&gt;
N=1，具体代表什么不确定。&lt;br /&gt;
3，每组mask的数目，mask一共9个，分三组，每组三个，即每组预测的boxes的数量。  &lt;br /&gt;
4，预测的坐标，bounding box offsets。&lt;br /&gt;
1，预测的置信度。&lt;br /&gt;
C，类别数。&lt;br /&gt;
所以类别数为10的时候，1*1*[3*(4+1+10)]=45&lt;br /&gt;
&lt;img src=&quot;/blog_image/YOLOv3_cfg.png&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;
&lt;h4 id=&quot;3运行&quot;&gt;3.运行&lt;/h4&gt;
&lt;p&gt;单GPU&lt;/p&gt;
&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;./darknet detector train cfg/voc.data cfg/yolov3-train.cfg darknet53.conv.74 | tee yolo.log   
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;
&lt;p&gt;多GPU&lt;/p&gt;
&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;./darknet detector train cfg/voc.data cfg/yolov3-train.cfg darknet53.conv.74 -gpus 0,1,2,3 | tee yolo.log
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;
&lt;p&gt;&amp;lt;font color=red&amp;gt;注意：一定要加 | tee {name}.log 这样才能保存运行过程中的各种数据，方便以后曲线可视化，比如loss跟IOU&amp;lt;/font&amp;gt;&lt;br /&gt;
当从某个已经保存的权重运行时：&lt;/p&gt;
&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;./darknet detector train cfg/coco.data cfg/yolov3.cfg backup/yolov3-train_5000.weights -gpus 0,1,2,3
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;
&lt;p&gt;当突然断掉，想从某个检查点运行时：&lt;/p&gt;
&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;./darknet detector train cfg/coco.data cfg/yolov3.cfg backup/yolov3-loss train.backup -gpus 0,1,2,3
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;
&lt;h4 id=&quot;4输出参数分析&quot;&gt;4.输出参数分析&lt;/h4&gt;
&lt;p&gt;&lt;img src=&quot;/blog_image/YOLOv3_t.png&quot; alt=&quot;&quot; /&gt;
Region xx:cfg文件中mask所在layer；&lt;br /&gt;
Avg IOU:当前迭代中，预测的box与groundtruth box的平均交并比；&lt;br /&gt;
Class：标注物体的分类准确率，越大越好，期望数值为1；&lt;br /&gt;
Obj:越大越好，期望数值为1；&lt;br /&gt;
No Obj:越小越好，期望数值为0；&lt;br /&gt;
.5R: 当IOU的阈值为0.5的时候，recall的大小；&lt;br /&gt;
0.75R:当IOU的阈值为0.75的时候，recall的大小；
7634：第几个batch；&lt;br /&gt;
1.077007：总损失；&lt;br /&gt;
0.980247 avg：平均损失；&lt;br /&gt;
0.001000 rate: 当前的学习率；&lt;br /&gt;
7.004570 seconds: 这个batch的训练时间；&lt;br /&gt;
488576 image：目前为止参与训练的图片总数。&lt;br /&gt;
注：输出参数跟cfg文件定义的bach,subdivision有关，比如bach=64,subdivision=16，说明一个bach处理64个样本，又分16组，每组4个样本，每组又包含3个信息&lt;/p&gt;
&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;Region 82 Avg IOU: 
Region 94 Avg IOU: 
Region 106 Avg IOU:
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;
&lt;h3 id=&quot;四测试&quot;&gt;四、测试&lt;/h3&gt;
&lt;h4 id=&quot;1loss曲线跟iou曲线&quot;&gt;1.loss曲线跟IOU曲线&lt;/h4&gt;
&lt;p&gt;可参考&lt;a href=&quot;https://github.com/Youth-18/tools/tree/master/YOLOv3&quot;&gt;curve_visualization.py&lt;/a&gt;&lt;/p&gt;
&lt;h4 id=&quot;2计算recall&quot;&gt;2.计算recall&lt;/h4&gt;
&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;./darknet detector recall cfg/voc.data cfg/yolov3-test.cfg results/yolov3-final.weights
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;
&lt;h4 id=&quot;3计算map&quot;&gt;3.计算mAP&lt;/h4&gt;
&lt;p&gt;首先将检测结果保存到result/person.txt。&lt;strong&gt;当你只有一类，比如.names中你的类别是person，它会以person.txt命名&lt;/strong&gt;&lt;/p&gt;
&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;./darknet detector valid cfg/voc.data cfg/yolov3-test.cfg results/yolov3-final.weights -out &quot;&quot; -gpus 0,1 -thresh .5
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;
&lt;p&gt;下载py-faster-rcnn下的voc_eval.py，可使用我的&lt;a href=&quot;https://github.com/Youth-18/tools/tree/master/YOLOv3&quot;&gt;voc_eval.py&lt;/a&gt;  &lt;br /&gt;
新建compute_mAP.py&lt;/p&gt;
&lt;div class=&quot;language-python highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;kn&quot;&gt;from&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;voc_eval&lt;/span&gt; &lt;span class=&quot;kn&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;voc_eval&lt;/span&gt;
 
&lt;span class=&quot;k&quot;&gt;print&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;voc_eval&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;'./results/{}.txt'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;'/xxx/darknet/scripts/VOCdevkit/VOC2007/Annotations/{}.xml'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;'/xxx/darknet/scripts/VOCdevkit/VOC2007/ImageSets/Main/test.txt'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;'person'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;'.'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;
&lt;p&gt;第一个参数是第一步生成的检测文件（{}.txt这个格式不要改,跟你第四个参数有关，为person.txt）；&lt;br /&gt;
第二个参数是你数据集的标注文件（{}.xml这个格式不要改,跟你第五个参数有关，代表所有xml）；&lt;br /&gt;
第三个参数是Main中的test.txt文件；&lt;br /&gt;
第四个参数是第一步生成的文件的名字&lt;strong&gt;以自己的class命名，比如求person的ap那就是person.txt&lt;/strong&gt;；&lt;br /&gt;
第五个参数是.，代表目录文件下所有文件。&lt;br /&gt;
注：重复测试时，请删除./darknet/annots.pkl文件，执行python compute_mAP.py，返回的最后一个值就是AP。&lt;/p&gt;
</description>
        <pubDate>Tue, 14 Aug 2018 00:00:00 +0800</pubDate>
        <link>/%E8%AE%BA%E6%96%87%E5%AE%9E%E8%B7%B5/2018/08/14/YOLOv3%E4%BD%BF%E7%94%A8%E6%96%87%E6%A1%A3/</link>
        <guid isPermaLink="true">/%E8%AE%BA%E6%96%87%E5%AE%9E%E8%B7%B5/2018/08/14/YOLOv3%E4%BD%BF%E7%94%A8%E6%96%87%E6%A1%A3/</guid>
        
        <category>论文实践</category>
        
        
        <category>论文实践</category>
        
      </item>
    
      <item>
        <title>论文理解-SSD </title>
        <description>&lt;p&gt;参考：https://blog.csdn.net/a8039974/article/details/77592395&lt;br /&gt;
https://blog.csdn.net/u010167269/article/details/52563573&lt;/p&gt;
&lt;h4 id=&quot;一论文所做出的贡献&quot;&gt;一、论文所做出的贡献&lt;/h4&gt;
&lt;p&gt;1.速度比YOLO快，精确度比YOLO高，事实上，能跟Faster R-CNN相媲美。&lt;br /&gt;
2.SSD的核心是使用应用于特征图的小的卷积滤波器来预测类别得分和default bounding boxes的offsets。&lt;br /&gt;
3.为了高精度，我们从不同尺度的特征图上产生不同尺度的预测，并通过aspect ratio来分开预测。&lt;br /&gt;
4.本文的这些设计，实现了简单的端对端训练，即使输入低分辨率的图像，也能保证高准确率。&lt;/p&gt;
&lt;h4 id=&quot;二模型&quot;&gt;二、模型&lt;/h4&gt;
&lt;p&gt;SSD基于一个前馈（feed-forward）卷积网络来产生固定大小的bounding boxes，并且对这些boxes中存在物体的可能性打分。然后进行非极大值抑制来确定最后的检测。SSD模型前边被称为基础网络（base network），此外，网络中还添加了辅助结构：&lt;br /&gt;
&lt;strong&gt;Multi-scale feature maps for detection&lt;/strong&gt;&lt;br /&gt;
在基础网络之后，添加了额外的卷积层，这些卷积层的尺寸逐渐减小，从而能够允许在不同尺寸下进行检测。&lt;br /&gt;
&lt;img src=&quot;/blog_image/fig2.png&quot; alt=&quot;&quot; /&gt;
&lt;strong&gt;Convolutional predictors for detection&lt;/strong&gt;&lt;br /&gt;
每一个添加的特征层（或基础网络中的特征层）能够使用一系列卷积滤波器（convolutional filters）生成一系列固定大小的detection predictions。对于一个尺寸为m×n,通道数为p的特征层，用于预测detection的参数的基本单元是3×3×p的卷积核，要么生成类别得分，要么生成相对于default box的偏移。具体细节看Fig.2。&lt;br /&gt;
&lt;img src=&quot;/blog_image/fig1.png&quot; alt=&quot;&quot; /&gt;
&lt;strong&gt;Default boxes and aspect ratios&lt;/strong&gt; &lt;br /&gt;
每一个特征图单元（feature map cell）上有一组具有不同aspect ratios的default bounding boxes。如Fig.1，一个cell就是一个格子，每个cell中有k个default boxes，对于每个default box，我们预测每一个类别的置信度（c1,c2,…cp）以及其与相关的ground truth box的offsets。所以对于每一个cell需要(c+4)k个filters,对于m×n的feature map共产生(c+4)kmn个输出。训练时，我们首先选出对图中猫狗最匹配的两个default boxes，将其作为正样本，其他的作为负样本，损失函数包括localization loss和confidence loss。&lt;/p&gt;
&lt;h4 id=&quot;三训练&quot;&gt;三、训练&lt;/h4&gt;
&lt;p&gt;在训练是，SSD与region proposal + pooling方法的区别是，SSD训练图像中的groundtruth boxes 需要赋予给一个输出的box。&lt;br /&gt;
将训练图像中的groundtruth boxes与固定输出的boxes对应以后，就可以end-to-end的进行loss function的计算以及back-propagation的计算更新。&lt;br /&gt;
&lt;strong&gt;Matching strategy&lt;/strong&gt;&lt;br /&gt;
训练的时候我们需要确定哪个default box与groundtruth box相匹配。开始的时候，使用MultiBox中的最大jaccard overlap来匹配groundtruth box与default box，确保每个groundtruth box与一个default box对应。接下来又不同于Multibox，开始将剩余的（未匹配的）default box 与任意的groundtruth box配对，只要两者间的jaccard overlap 大于一个阈值(本文为0.5)。&lt;br /&gt;
&lt;strong&gt;Training objective&lt;/strong&gt;&lt;br /&gt;
SSD训练的目标函数源于MultiBox但是扩展成处理多目标类别。$x^p_{ij}={1,0}$表示第i个default box与类别p的第j个groundtruth box相匹配。根据上面的匹配策略，我们可以得到$\sum_ix^p_{ij}\geq1$,即对第j个groundtruth box，可能有多个default box与其匹配。&lt;br /&gt;
总的目标损失函数是localization loss(loc)与confidence loss(conf)的加权和：&lt;br /&gt;
&lt;script type=&quot;math/tex&quot;&gt;L(x,c,l,g)=\frac 1N(L_{conf}(x,c)+\alpha L_{loc}(x,l,g)&lt;/script&gt;&lt;br /&gt;
其中：&lt;/p&gt;
&lt;ul&gt;
  &lt;li&gt;N是与groundtruth boxes匹配的default boxes的个数。&lt;/li&gt;
  &lt;li&gt;localization loss(loc)是Fast R-CNN中的Smooth L1 loss,用于predicted box(l)和groundtruth box(g)的参数（即中心坐标位置，width，height）中，回归default boxes的中心坐标以及width、height。&lt;img src=&quot;/blog_image/t1.png&quot; alt=&quot;&quot; /&gt;&lt;/li&gt;
  &lt;li&gt;confidence loss(conf)是Softmax Loss，输入为每一类的置信度c。&lt;/li&gt;
  &lt;li&gt;$\alpha$为权重，设为1。&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;strong&gt;Choosing scales and aspect ratios for default boxes&lt;/strong&gt;&lt;br /&gt;
大部分CNN网络在越深的层，feature map的尺寸会越来越小，这样做不仅仅是为了减少计算与内存的需求，还有好处就是，最后提取的feature map有某种程度上的平移与尺度不变性。&lt;br /&gt;
为了处理不同尺度的物体，一些文章将图像转换成不同尺度，将这些图像独立通过CNN网络处理，再将这些不同尺度的图像结果进行综合。&lt;br /&gt;
其实，如果使用同一网络的、不同层的feature maps，也可以达到相同的效果，同时在所有物体尺度中共享参数。&lt;br /&gt;
因此，本文使用lower feature maps、upper feature maps来predict detections。一般来说，一个CNN网络中不同的layers有着不同的感受野，这里的感受野指feature map上的一个节点对应输入图像尺寸的大小。&lt;br /&gt;
在SSD中，default boxes不必要与每一层的感受野对应，本文中，feature map中特定的位置来负责图像中特定的区域，以及物体特定的尺寸。我们用m个feature maps来做predictions,每个feature map中default box的尺寸大小计算如下：&lt;br /&gt;
&lt;script type=&quot;math/tex&quot;&gt;s_k = s_{min} + \frac{s_{max} - s_{min}}{m-1}(k-1), \ \ \ \ \ \  \ \ \ \ k \in [1, m]&lt;/script&gt;&lt;br /&gt;
其中，m为feature maps的数量，$s_{min}$ 取值 0.2，$s_{max}$ 取值 0.95，意味着最低层的尺度是 0.2，最高层的尺度是 0.95，再用不同 aspect ratio 的 default boxes，用$a_r$来表示：$a_r={1,2,3,\frac 12,\frac 13}$，则每一个 default boxes 的 width、height 就可以计算出来：&lt;/p&gt;

&lt;script type=&quot;math/tex; mode=display&quot;&gt;w^a_k=s_k \sqrt{a_r}\\
h^a_k=s_k/\sqrt{a_r}&lt;/script&gt;

&lt;p&gt;对于aspect ratio为1时，本文还增加了一个default box,这个box的scale是$s^{\prime}{k}=\sqrt{s_k s_{k+1}}$所以在每个feature map cell 上有6个default boxes。&lt;br /&gt;
每一个default box的中心为:$(\frac {i+0.5}{|f_k|},\frac {j+0.5}{f_k})$，其中，$|f_k|$是第K个feature map的大小，同时，$i,j \in [0,\vert f_k \vert]$。&lt;br /&gt;
&lt;strong&gt;Hard negative mining&lt;/strong&gt;&lt;br /&gt;
在生成一系列的 predictions 之后，会产生很多个符合 ground truth box 的 predictions boxes，但同时，不符合 ground truth boxes 也很多，而且这个 negative boxes，远多于 positive boxes。这会造成 negative boxes、positive boxes 之间的不均衡。训练时难以收敛。&lt;br /&gt;
因此，本文采取，先将每一个物体位置上对应 predictions（default boxes）是 negative 的 boxes 进行排序，按照 default boxes 的 confidence 的大小。 选择最高的几个，保证最后 negatives、positives 的比例在 3:1。&lt;br /&gt;
本文通过实验发现，这样的比例可以更快的优化，训练也更稳定。&lt;br /&gt;
&lt;strong&gt;Data augmentation&lt;/strong&gt;&lt;br /&gt;
每一张训练图像，随机的进行如下几种选择：&lt;/p&gt;
&lt;ul&gt;
  &lt;li&gt;使用原始的图像&lt;/li&gt;
  &lt;li&gt;采样一个 patch，与物体之间最小的 jaccard overlap 为：0.1，0.3，0.5，0.7 与 0.9&lt;/li&gt;
  &lt;li&gt;随机的采样一个 patch
采样的 patch 是原始图像大小比例是 [0.1，1]，aspect ratio 在 12 与 2 之间。&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;当 groundtruth box 的 中心（center）在采样的 patch 中时，我们保留重叠部分。&lt;br /&gt;
在这些采样步骤之后，每一个采样的 patch 被 resize 到固定的大小，并且以 0.5 的概率随机的 水平翻转（horizontally flipped）。&lt;/p&gt;

&lt;h4 id=&quot;四有关问题&quot;&gt;四、有关问题&lt;/h4&gt;
&lt;p&gt;1.SSD为什么对小物体检测不好？&lt;br /&gt;
https://www.zhihu.com/question/49455386&lt;br /&gt;
（1）SSD基于全卷机的网络检测，用不同的层检测大小不同的物体，小物体在浅层检测，大物体在深层检测。但是，浅层的feature map大，但是semantic不够，深层的semantic够了，但是feature map太小。要检测小物体，需要足够大的feature map来提供更加精细的特征和更加密集的采样，同时也需要足够的semantic meaning来与背景区分。可关注FPN/DSSD的做法。  （2）每个feature map上的pixel会对应几个anchor，然后网络对anchor进行训练，以此驱动对feature训练。对于小物体，其所对应的anchor比较少（gt overlap &amp;gt; 0.5的anchor），所以其feature难以训练。&lt;/p&gt;

</description>
        <pubDate>Sun, 12 Aug 2018 00:00:00 +0800</pubDate>
        <link>/%E8%AE%BA%E6%96%87%E7%90%86%E8%A7%A3/2018/08/12/%E8%AE%BA%E6%96%87%E7%90%86%E8%A7%A3_SSD/</link>
        <guid isPermaLink="true">/%E8%AE%BA%E6%96%87%E7%90%86%E8%A7%A3/2018/08/12/%E8%AE%BA%E6%96%87%E7%90%86%E8%A7%A3_SSD/</guid>
        
        <category>论文理解</category>
        
        
        <category>论文理解</category>
        
      </item>
    
  </channel>
</rss>
